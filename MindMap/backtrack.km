{
    "root": {
        "data": {
            "id": "c9lqr0132f40",
            "created": 1614574095913,
            "text": "Backtrack"
        },
        "children": [
            {
                "data": {
                    "id": "c9lqtg8qdm00",
                    "created": 1614574287932,
                    "text": "Rucursion only"
                },
                "children": [
                    {
                        "data": {
                            "id": "c9lqu0x04f40",
                            "created": 1614574332935,
                            "text": "LC 17. Letter Combinations of a Phone Number "
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9lquimfypc0",
                                    "created": 1614574371479,
                                    "text": "init a number to chars map"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9lquqvjr5k0",
                                    "created": 1614574389444,
                                    "text": "the candidates are the chars in digit, path start with empty string"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9lqybqkmk00",
                                    "created": 1614574669948,
                                    "text": "end condition: finish visting all the candidates"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9lr61ndu7c0",
                                    "created": 1614575274901,
                                    "text": "recusively call on every char of num, add char to path and visit the next candidate"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c9n9u7hg4480",
                            "created": 1614729508277,
                            "text": "LC 22. Generate Parentheses"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9n9uamvxi80",
                                    "created": 1614729515136,
                                    "text": "keep left and right count in backtrack function"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9n9uomb1ls0",
                                    "created": 1614729545576,
                                    "text": "end condition: path length is 2 * n"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9n9v70unig0",
                                    "created": 1614729585638,
                                    "text": "two forks in backtracking"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "c9n9vqz7jkw0",
                                            "created": 1614729629074,
                                            "text": "if left count is less than n, backtrack path + '(' and increment left by 1"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "c9n9wbhh37s0",
                                            "created": 1614729673714,
                                            "text": "if right count is less than left, backtrack path + ')' and increment right by 1"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "c9lqtsgexl40",
                    "created": 1614574314518,
                    "text": "Backtracking"
                },
                "children": [
                    {
                        "data": {
                            "id": "c9pvgtuvluw0",
                            "created": 1614993644212,
                            "text": "LC 39. Combination Sum"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9pvi6bul940",
                                    "created": 1614993749723,
                                    "text": "every candidate can reuse itself but not previous candidates, so backtrack on current idx to the end of candidate"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9pvkq4o0wg0",
                                    "created": 1614993949553,
                                    "text": "if current sum equals to target, add path to the result"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9pvkzgbffs0",
                                    "created": 1614993969848,
                                    "text": "else if current sum is less than the target, backtrack"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9pvl9gpiww0",
                                    "created": 1614993991640,
                                    "text": "if the current sum is larger than the target, do nothing"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c9qo3j666e80",
                            "created": 1615074414403,
                            "text": "LC 40. Combination Sum II"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9qo3p0wnx40",
                                    "created": 1615074427145,
                                    "text": "sort the array"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9qo46e7eow0",
                                    "created": 1615074464955,
                                    "text": "every candidate cannot reuse itself, so backtrack on current idx + 1 to the end of candidate"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9qo4gllr600",
                                    "created": 1615074487170,
                                    "text": "also, to avoid duplicates, every time backtrack skop those candidates that are same with previous candidate"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c9tbeyrzn1s0",
                            "created": 1615343315821,
                            "text": "LC 46. Permutations"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9tbfty8kpk0",
                                    "created": 1615343383679,
                                    "text": "base case: path size equals to total candidates size"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9tbg7dud340",
                                    "created": 1615343412921,
                                    "text": "every time on backtracking, candidates become a new array of all elements exclude the current candidate"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c9tbhj3zbug0",
                            "created": 1615343516810,
                            "text": "LC 47. Permutations II"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9tbhmpbrts0",
                                    "created": 1615343524631,
                                    "text": "base case: path size equals to total candidates size"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9tbib8mxpc0",
                                    "created": 1615343578041,
                                    "text": "to aviod dupilcated path, sort the array and skip the candidates that are the same with previous candidate"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9tbive90kg0",
                                    "created": 1615343621917,
                                    "text": "every time on backtracking, candidates become a new array of all elements exclude the current candidate"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "classic",
    "version": "1.4.43"
}