{
    "root": {
        "data": {
            "id": "c9lqr0132f40",
            "created": 1614574095913,
            "text": "Backtrack"
        },
        "children": [
            {
                "data": {
                    "id": "c9lqtg8qdm00",
                    "created": 1614574287932,
                    "text": "Rucursion only"
                },
                "children": [
                    {
                        "data": {
                            "id": "c9lqu0x04f40",
                            "created": 1614574332935,
                            "text": "LCÂ 17. Letter Combinations of a Phone Number "
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9lquimfypc0",
                                    "created": 1614574371479,
                                    "text": "init a number to chars map"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9lquqvjr5k0",
                                    "created": 1614574389444,
                                    "text": "the candidates are the chars in digit, path start with empty string"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9lqybqkmk00",
                                    "created": 1614574669948,
                                    "text": "end condition: finish visting all the candidates"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9lr61ndu7c0",
                                    "created": 1614575274901,
                                    "text": "recusively call on every char of num, add char to path and visit the next candidate"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "c9n9u7hg4480",
                            "created": 1614729508277,
                            "text": "LC 22. Generate Parentheses"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "c9n9uamvxi80",
                                    "created": 1614729515136,
                                    "text": "keep left and right count in backtrack function"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9n9uomb1ls0",
                                    "created": 1614729545576,
                                    "text": "end condition: path length is 2 * n"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "c9n9v70unig0",
                                    "created": 1614729585638,
                                    "text": "two forks in backtracking"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "c9n9vqz7jkw0",
                                            "created": 1614729629074,
                                            "text": "if left count is less than n, backtrack path + '(' and increment left by 1"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "c9n9wbhh37s0",
                                            "created": 1614729673714,
                                            "text": "if right count is less than left, backtrack path + ')' and increment right by 1"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "c9lqtsgexl40",
                    "created": 1614574314518,
                    "text": "Backtracking"
                },
                "children": []
            }
        ]
    },
    "template": "right",
    "theme": "classic",
    "version": "1.4.43"
}